buildscript {
  ext.buildConfig = [
      'compileSdk': 28,
      'minSdk': 26,
      'targetSdk': 28,

      'version': [
          'major': 0,
          'minor': 1,
          'patch': 0,
          'build': 0,
      ],
  ]
  ext.buildConfig.version['name'] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
  ext.buildConfig.version['code'] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build


  ext.versions = [
      'supportLibrary': '1.0.2',
      'kotlin': [
          'lang': '1.3.31',
          'coroutines': '1.3.0-M1'
      ],
      'dagger': '2.23.1',
      'arch': [
          'navigation': '2.0.0',
          'lifecycle': '2.0.0',
          'room': '2.1.0-alpha06'
      ],
      'playservices': [
          'fit': '16.0.1',
          'auth': '16.0.1'
      ],
      'rx': [
          'binding': '3.0.0-alpha2'
      ],
      'sqldelight': '1.2.0-SNAPSHOT'
  ]

  ext.deps = [
      'kotlin': [
          'stdlib': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin.lang}",
          'coroutines': [
              'core': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlin.coroutines}",
              'rx2': "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${versions.kotlin.coroutines}",
              'playservices': "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:${versions.kotlin.coroutines}",
              'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin.coroutines}",
          ]
      ],
      'android': [
          'support': [
              'appCompat': "androidx.appcompat:appcompat:${versions.supportLibrary}",
              'fragment': "androidx.fragment:fragment-ktx:1.1.0-alpha09",
              'constraintLayout': 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
          ],
          'material': [
              'material': "com.google.android.material:material:1.0.0"
          ],
          'arch': [
              'navigation': [
                  'fragment': "androidx.navigation:navigation-fragment-ktx:${versions.arch.navigation}",
                  'ui': "androidx.navigation:navigation-ui-ktx:${versions.arch.navigation}",
                  'safeargs_plugin': "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.arch.navigation}"
              ],
              'lifecycle': [
                  'viewmodel': "androidx.lifecycle:lifecycle-viewmodel:${versions.arch.lifecycle}",
                  'extensions': "androidx.lifecycle:lifecycle-extensions:${versions.arch.lifecycle}"
              ],
              'work': 'androidx.work:work-runtime-ktx:2.0.0'
          ],
          'ktx': [
              'core': 'androidx.core:core-ktx:1.0.1',
              'sqlite': 'androidx.sqlite:sqlite-ktx:2.0.0'
          ]
      ],
      'rx': [
          'java': 'io.reactivex.rxjava2:rxjava:2.2.7',
          'android': 'io.reactivex.rxjava2:rxandroid:2.1.1',
          'binding': [
              'main': "com.jakewharton.rxbinding3:rxbinding:${versions.rx.binding}",
              'material': "com.jakewharton.rxbinding3:rxbinding-material:${versions.rx.binding}",
              'appcompat': "com.jakewharton.rxbinding3:rxbinding-appcompat:${versions.rx.binding}"
          ],
          'relay': 'com.jakewharton.rxrelay2:rxrelay:2.1.0'
      ],
      'okio': 'com.squareup.okio:okio:2.2.2',
      'bugsnag': [
          'sdk': 'com.bugsnag:bugsnag-android:4.12.0'
      ],
      'gson': 'com.google.code.gson:gson:2.8.5',
      'timber': 'com.jakewharton.timber:timber:4.7.1',
      'dagger': [
          'runtime': "com.google.dagger:dagger:${versions.dagger}",
          'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}"
      ],
      'processphoenix': 'com.jakewharton:process-phoenix:2.0.0',
      'playservices': [
          'fit': "com.google.android.gms:play-services-fitness:${versions.playservices.fit}",
          'auth': "com.google.android.gms:play-services-auth:${versions.playservices.auth}"
      ],
      's3': 'com.amazonaws:aws-android-sdk-s3:2.13.4',
      'sqldelight': [
          'gradle': "com.squareup.sqldelight:gradle-plugin:${versions.sqldelight}",
          'coroutines': "com.squareup.sqldelight:coroutines-extensions:${versions.sqldelight}",
          'android_driver': "com.squareup.sqldelight:android-driver:${versions.sqldelight}"
      ],
      'junit': 'junit:junit:4.12',
      'truth': 'com.google.truth:truth:0.43'
  ]

  repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url("https://oss.sonatype.org/content/repositories/snapshots") }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.4.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin.lang}"
    classpath 'com.github.triplet.gradle:play-publisher:2.2.0'
  }
}

plugins {
  id "com.github.ben-manes.versions" version "0.21.0"
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

subprojects { subproject ->
  buildscript {
    repositories {
      google()
      mavenCentral()
      jcenter()
      maven { url("https://oss.sonatype.org/content/repositories/snapshots") }
    }
  }

  repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url("https://oss.sonatype.org/content/repositories/snapshots") }
  }

  plugins.withId("com.android.application") {
    subproject.apply from: rootProject.file("setup_android_module.gradle")
  }

  plugins.withId("com.android.library") {
    subproject.apply from: rootProject.file("setup_android_module.gradle")
  }

  plugins.withId("kotlin") {
    subproject.apply from: rootProject.file("setup_kotlin_module.gradle")
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
      freeCompilerArgs = [
          "-XXLanguage:+InlineClasses",
          '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
          '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi',
          '-Xuse-experimental=kotlinx.coroutines.FlowPreview',
      ]
    }
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { details ->
        // Force all Kotlin coroutines artifacts to use the same version.
        if (details.requested.group == 'org.jetbrains.kotlinx'
            && details.requested.name.startsWith('kotlinx-coroutines')) {
          details.useVersion versions.kotlin.coroutines
        }
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
